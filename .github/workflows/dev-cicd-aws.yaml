name: istory ci/cd dev pipeline

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  verify_pipeline:
    environment: runner
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: 소스코드 다운로드
        uses: actions/checkout@v4 

      - name: JDK 17 설치
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
        
      - name: Print environment variables
        run: |
          echo "Database URL: jdbc:mysql://mysql:3306/${{ secrets.MYSQL_DATABASE }}"
          echo "Username: ${{ secrets.MYSQL_USER }}"

      - name: change application.yml
        run: |
          cat > src/main/resources/application.yml << EOF
          spring:
            datasource:
              url: jdbc:mysql://mysql:3306/${{ secrets.MYSQL_DATABASE }}
              username: ${{ secrets.MYSQL_USER }}
              password: ${{ secrets.MYSQL_PASSWORD }}
              driver-class-name: com.mysql.cj.jdbc.Driver
            jpa:
              database-platform: org.hibernate.dialect.MySQL8Dialect
              hibernate:
                ddl-auto: update
              show-sql: true
            application:
              name: USER-SERVICE
            jwt:
              issuer: user@gmail.com
              secret_key: study-springboot
          management:
            endpoints:
              web:
                exposure:
                  include: health,info
            endpoint:
              health:
                show-details: always
          EOF

      - name: Wait for MySQL service to be ready
        run: sleep 30

      - name: 테스트 수행
        run: ./gradlew test --info

      - name: 테스트 검사 후 실패 시 파이프라인 중단
        if: failure()
        run: |
          echo "Tests failed! Pipeline will be stopped."
          exit 1

      - name: 테스트 결과를 STEP Summary 에 업로드
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: |
            **/build/reports/tests/test/
            **/build/test-results/test/
          retention-days: 30
